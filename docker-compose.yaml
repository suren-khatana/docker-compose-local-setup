version: '3.9'

services:
  reverseproxy:
    container_name: reverse-proxy
    depends_on: 
      - curity-admin
      - curity-runtime-external
      - curity-runtime-internal
    image: reverse-proxy:local
    build:
      context: .
      dockerfile: ./reverse-proxy/Dockerfile
      labels:
        - "env=local"
    ports:
      - 443:443
    restart: always

  postgresdb:
    container_name: postgres-db
    image: postgres-db:local
    build: 
      context: postgres-config
      labels:
        - "env=local"
    volumes:
      - ./postgres-vol:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: postgres
    restart: always

  curity-admin: # admin node
    container_name: curity-admin
    image: curity-idsvr:local
    command: ["sh", "-c", "idsvr --service-role admin --service-name ADMIN --admin"]
    build: 
      context: idsvr-config
      labels:
        - "env=local"
    environment:
      PASSWORD: password123
      LOGGING_LEVEL: DEBUG
    links:
      - postgresdb
    restart: always
  
  curity-runtime-internal: # internal runtime-node
    container_name: curity-runtime-internal
    command: ["sh", "-c", "idsvr --service-role INTERNAL --service-name INTERNAL"]
    depends_on: 
      - curity-admin
    image: curity-idsvr:local
    deploy:
      replicas: 1
    build: 
      context: idsvr-config
      labels:
        - "env=local"
    environment:
      LOGGING_LEVEL: DEBUG
    links:
      - postgresdb
    restart: always

  curity-runtime-external: # internet facing runtime-node
    container_name: curity-runtime-external
    command: ["sh", "-c", "idsvr --service-role EXTERNAL --service-name EXTERNAL"]
    depends_on: 
      - curity-admin
    image: curity-idsvr:local
    deploy:
      replicas: 1
    build: 
      context: idsvr-config
      labels:
        - "env=local"
    environment:
      LOGGING_LEVEL: DEBUG
    links:
      - postgresdb
    restart: always